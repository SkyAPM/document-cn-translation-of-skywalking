(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{552:function(t,r,e){"use strict";e.r(r);var s=e(0),_=Object(s.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),e("p",[t._v("有以下两种类型的协议.")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),e("p",[t._v("它们也是与探针的组相关的, 为了理解这一点, 请参考"),e("router-link",{attrs:{to:"./../concepts-and-designs/"}},[t._v("概念和设计")]),t._v("一文.\n这些探针组是"),e("strong",[t._v("基于原生语言代理协议")]),t._v(", "),e("strong",[t._v("服务网格协议")]),t._v("以及其他第三方打点协议.")],1),t._v(" "),t._m(3),t._v(" "),e("p",[t._v("包含服务, 服务实例, 网络地址以及端点元数据注册.\n注册的目的是:")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),e("p",[t._v("有以下两种协议可以让基于语言的代理在分布式环境下工作.")]),t._v(" "),t._m(6),t._v(" "),e("p",[t._v("为了兼容性, 请求头有两种格式. 默认是使用 v2.")]),t._v(" "),e("ul",[e("li",[e("router-link",{attrs:{to:"./Skywalking-Cross-Process-Propagation-Headers-Protocol-v2.html"}},[t._v("跨进程传播的请求头 v2")]),t._v(" 是自 6.0.0-beta 版本开始, 针对在线上下文传播的一种新的协议.\n它将在以后替代老的 "),e("strong",[t._v("SW3")]),t._v(" 协议, 目前来说它们二者都是支持的.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"./Skywalking-Cross-Process-Propagation-Headers-Protocol-v1.html"}},[t._v("跨进程传播的请求头 v1")]),t._v(" 是针对在线传播的协议.\n遵循此协议的不同进程的追踪数据段可以被连接起来.")],1)]),t._v(" "),e("p",[t._v("自 SkyWalking v6.0.0-beta 开始, SkyWalking 代理和后端都使用第二版的追踪数据协议(Trace Data Protocol v2), 后端仍然支持 v1 版本的协议.")]),t._v(" "),e("ul",[e("li",[e("router-link",{attrs:{to:"./Trace-Data-Protocol-v2.html"}},[t._v("SkyWalking 追踪数据协议 v2")]),t._v(" 定义了代理和后端之间通讯的方式和格式.")],1),t._v(" "),e("li",[e("router-link",{attrs:{to:"./Trace-Data-Protocol.html"}},[t._v("SkyWalking 追踪数据协议 v1")]),t._v(". 该协议用于旧的版本中. 目前仍然支持.")],1)]),t._v(" "),t._m(7),t._v(" "),e("p",[t._v("Sidecar 中的探针或代理可以使用该协议发送数据到后端. 该服务通过 gRPC 实现, 需要以下关键信息:")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),e("p",[t._v("SkyWalking 并不定义第三方打点协议. 它们只是协议和数据格式, SkyWalking 兼容这些协议和数据格式, 且可以接收它们. SkyWalking 一开始就支持 Zipkin v1, v2 数据格式.\n后端遵循模块化原则, 所以要扩展新的接收器以支持新的协议和格式是非常容易的.")]),t._v(" "),t._m(10),t._v(" "),e("p",[t._v("查询协议遵循 GraphQL 语法, 提供了数据查询能力, 这都取决于你要分析的指标.")]),t._v(" "),e("p",[t._v("实际的查询 GraphQL 脚本可以在 "),e("code",[t._v("query-protocol")]),t._v(" "),e("a",{attrs:{href:"https://github.com/apache/skywalking/tree/master/oap-server/server-query-plugin/query-graphql-plugin/src/main/resources",target:"_blank",rel:"noopener noreferrer"}},[t._v("文件夹"),e("OutboundLink")],1),t._v("内找到.")])])}),[function(){var t=this.$createElement,r=this._self._c||t;return r("h1",{attrs:{id:"协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#协议"}},[this._v("#")]),this._v(" 协议")])},function(){var t=this.$createElement,r=this._self._c||t;return r("ul",[r("li",[r("p",[r("a",{attrs:{href:"#%E6%8E%A2%E9%92%88%E5%8D%8F%E8%AE%AE"}},[r("strong",[this._v("探针协议")])]),this._v(". 包括对探针如何发送收集到的度量数据、跟踪信息以及涉及到的每个实体格式的描述和定义。")])]),this._v(" "),r("li",[r("p",[r("a",{attrs:{href:"#%E6%9F%A5%E8%AF%A2%E5%8D%8F%E8%AE%AE"}},[r("strong",[this._v("查询协议")])]),this._v(". 服务后端给 SkyWalking 自有的 UI 和任何第三方 UI 提供了查询的能力. 这些查询都是基于 GraphQL 的.")])])])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"探针协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#探针协议"}},[this._v("#")]),this._v(" 探针协议")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"注册协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#注册协议"}},[this._v("#")]),this._v(" 注册协议")])},function(){var t=this.$createElement,r=this._self._c||t;return r("ol",[r("li",[this._v("对于服务, 网络地址和端点, 注册之后将会返回注册对象的一个唯一 ID, 通常是一个整数. 探针可以使用这个 ID 来替代字符串文本, 达到数据压缩的功能. 进一步讲, 有些协议只接收 ID.")]),this._v(" "),r("li",[this._v("对于服务实例, 注册之后将会为每个新的实例返回一个新的唯一 ID. 每个服务实例必须包含服务 ID.")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"基于语言的原生代理协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#基于语言的原生代理协议"}},[this._v("#")]),this._v(" 基于语言的原生代理协议")])},function(){var t=this.$createElement,r=this._self._c||t;return r("ol",[r("li",[r("strong",[this._v("跨进程传播的头部协议")]),this._v("是一种有线数据格式, 代理和 SDK 通常使用 RPC 请求以及 HTTP/MQ/HTTP2 请求头来运载数据.\n远程代理将在请求处理器中接收这些数据, 并将上下文绑定到该请求中.")]),this._v(" "),r("li",[r("strong",[this._v("追踪数据协议")]),this._v("是一种离线数据格式, 代理和 SDK 使用这种数据格式来发送追踪数据和指标数据到 SkyWalking 或其他兼容的后端。")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"服务网格探针协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务网格探针协议"}},[this._v("#")]),this._v(" 服务网格探针协议")])},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ol",[e("li",[t._v("在服务两侧都需要服务名或 ID")]),t._v(" "),e("li",[t._v("在服务两侧都需要服务实例名称或 ID")]),t._v(" "),e("li",[t._v("端点. HTTP 中的 URI, gRPC 中的方法完整签名.")]),t._v(" "),e("li",[t._v("时延. 以毫秒为单位")]),t._v(" "),e("li",[t._v("HTTP 中的响应码")]),t._v(" "),e("li",[t._v("状态. 成功或失败")]),t._v(" "),e("li",[t._v("协议. HTTP, gRPC 等")]),t._v(" "),e("li",[t._v("监测点. 在服务网格 sidecar 中, "),e("code",[t._v("client")]),t._v(" 或 "),e("code",[t._v("server")]),t._v("。 在普通的 L7 代理中, 值是 "),e("code",[t._v("proxy")]),t._v(".")])])},function(){var t=this.$createElement,r=this._self._c||t;return r("h3",{attrs:{id:"第三方打点协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#第三方打点协议"}},[this._v("#")]),this._v(" 第三方打点协议")])},function(){var t=this.$createElement,r=this._self._c||t;return r("h2",{attrs:{id:"查询协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查询协议"}},[this._v("#")]),this._v(" 查询协议")])}],!1,null,null,null);r.default=_.exports}}]);