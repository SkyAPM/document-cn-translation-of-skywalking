(window.webpackJsonp=window.webpackJsonp||[]).push([[355],{192:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("p",[t._v("在大多数情况下，端点应该通过语言代理、服务网格可观察性解决方案或仪表系统的配置自动检测。\n有一些特殊的情况，特别是当人们使用REST样式的URI时，应用程序代码将参数放在端点名称中，例如将订单id放在URI中，如/prod/ORDER123和/prod/ORDER123。\n但从逻辑上讲，人们希望他们可以有一个端点名，如prod/{order-id}。这是为端点分组参数化而设计的特性。\n目前，用户可以通过静态YAML文件中的 endpoint_name_grouping 来设置分组规则。或使用"),s("router-link",{attrs:{to:"./dynamic-config.html"}},[t._v("动态配置")]),t._v("初始化和更新端点分组规则。")],1),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("无论是静态本地文件还是动态配置值，它们都共享相同的YAML格式。")]),t._v(" "),t._m(2)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"端点分组参数化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#端点分组参数化"}},[this._v("#")]),this._v(" 端点分组参数化")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"配置格式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置格式"}},[this._v("#")]),this._v(" 配置格式")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("grouping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Endpoint of the service would follow the following rules")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("service-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" serviceA\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Logic name when the regex expression matched.")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endpoint-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /prod/"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("regex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \\/prod\\/.+\n")])])])}],!1,null,null,null);e.default=a.exports}}]);