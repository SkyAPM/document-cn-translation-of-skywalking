(window.webpackJsonp=window.webpackJsonp||[]).push([[362],{185:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("SkyWalking agent 插件启动时无法对网关进行打点，但它们是可以在 "),a("code",[t._v("gateways.yml")]),t._v(" 或者通过"),a("router-link",{attrs:{to:"./dynamic-config.html"}},[t._v("动态配置")]),t._v("设置。他们不能自动在后端注册的原因是没有合适的代理插件，例如，没有代理插件的 Nginx, haproxy 等。因此，为了可视化真实的拓扑，我们提供了一种手动配置网关/代理的方法。")],1),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("配置内容包括网关的名字和其他实例：")]),t._v(" "),t._m(2),t._m(3)])}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"无法打点的网关-代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无法打点的网关-代理"}},[this._v("#")]),this._v(" 无法打点的网关/代理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"配置格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置格式"}},[this._v("#")]),this._v(" 配置格式")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gateways")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" proxy0 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the name is not used for now")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("instances")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the host/ip of this gateway instance")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9099")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the port of this gateway instance, defaults to 80")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[a("strong",[t._v("注意")]),t._v("  实例的"),a("code",[t._v("host")]),t._v("必须是客户端实际使用的，例如如果 "),a("code",[t._v("proxyA")]),t._v(" 实例有两个 IP "),a("code",[t._v("192.168.1.110")]),t._v(" 和 "),a("code",[t._v("192.168.1.111")]),t._v("，两个都代理目标服务，客户端连接 "),a("code",[t._v("192.168.1.110")]),t._v("，那么配置 "),a("code",[t._v("192.168.1.111")]),t._v(" 作为 "),a("code",[t._v("host")]),t._v(" 是无法工作的配置项。")])}],!1,null,null,null);s.default=n.exports}}]);