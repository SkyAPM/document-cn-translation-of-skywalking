(window.webpackJsonp=window.webpackJsonp||[]).push([[382],{201:function(t,r,a){"use strict";a.r(r);var s=a(0),e=Object(s.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"skywalking支持kotlin插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#skywalking支持kotlin插件"}},[t._v("#")]),t._v(" Skywalking支持Kotlin插件")]),t._v(" "),a("p",[t._v("Skywalking支持Kotlin编写的自动工具支持插件.")]),t._v(" "),a("h2",{attrs:{id:"简述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简述"}},[t._v("#")]),t._v(" 简述")]),t._v(" "),a("p",[t._v("SkyWalking 提供跟踪上下文在线程内的传播。为了支持Kotlin协同程序，我们提供了这个附加插件")]),t._v(" "),a("h2",{attrs:{id:"实现原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),a("p",[t._v("我们知道，Kotlin coroutine通过“CoroutineDispatcher”来切换执行线程。")]),t._v(" "),a("ol",[a("li",[t._v("在分派延续之前，创建当前上下文的快照.")]),t._v(" "),a("li",[t._v("然后在线程切换后创建协程跨度，标记跨度与快照.")]),t._v(" "),a("li",[t._v("在新线程中创建的每个新span都是这个协同程序span的子跨度。我们可以用轨迹把这些联系起来。")]),t._v(" "),a("li",[t._v("在原来的runnable执行之后，我们需要停止协同程序跨度来清理线程状态。")])]),t._v(" "),a("h2",{attrs:{id:"一些截图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一些截图"}},[t._v("#")]),t._v(" 一些截图")]),t._v(" "),a("h3",{attrs:{id:"运行没有插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行没有插件"}},[t._v("#")]),t._v(" 运行没有插件")]),t._v(" "),a("p",[t._v("我们运行一个基于Kotlin协同程序的gRPC服务器，而不需要这个协同程序插件。\n您可以发现，一个调用(client -> server1 -> server2)被分割为两条跟踪路径。")]),t._v(" "),a("ol",[a("li",[t._v("没有退出span的Server1和server2链路.\n"),a("img",{attrs:{src:"http://skywalking.apache.org/screenshots/7.0.0/kotlin/coroutine/without-coroutine-plugin-server1.jpg",alt:"不包含kotlin插件"}})]),t._v(" "),a("li",[t._v("Server2链路.\n"),a("img",{attrs:{src:"http://skywalking.apache.org/screenshots/7.0.0/kotlin/coroutine/without-coroutine-plugin-server2.jpg",alt:"不包含kotlin插件"}})])]),t._v(" "),a("h3",{attrs:{id:"使用插件运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用插件运行"}},[t._v("#")]),t._v(" 使用插件运行")]),t._v(" "),a("p",[t._v("无需手动更改代码，只需安装插件。我们可以发现跨是连在一起的。我们可以得到一个客户电话的所有信息.\n"),a("img",{attrs:{src:"http://skywalking.apache.org/screenshots/7.0.0/kotlin/coroutine/run-with-coroutine-plugin.jpg",alt:"包含kotlin插件"}})])])}],!1,null,null,null);r.default=e.exports}}]);