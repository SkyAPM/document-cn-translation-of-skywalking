(window.webpackJsonp=window.webpackJsonp||[]).push([[386],{197:function(t,e,l){"use strict";l.r(e);var a=l(0),n=Object(a.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("div",{staticClass:"content"},[l("h1",{attrs:{id:"操作名称分组规则"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#操作名称分组规则"}},[t._v("#")]),t._v(" 操作名称分组规则")]),t._v(" "),l("p",[t._v("agent 自动检测出的操作名称是变化莫测的, 有时，目标应用程序在其中携带参数，这主要是由于URI中包含的参数.\n大多数情况下这些操作名也称为端点名.\n例如 /api/checkTicket/tk/{userToken}.")]),t._v(" "),l("p",[t._v("我们利用框架中的参数形成路径解决了大多数情况，比如SpringMVC、Webflux等.\n在这种情况下，通过这种方式是无法检测到的，因此我们必须要求用户手动设置组规则.")]),t._v(" "),l("p",[t._v("与其他 agent 配置一样，支持通过 agent.config 设置所有规则，系统属性和系统环境.")]),t._v(" "),l("ul",[l("li",[t._v("配置格式, "),l("code",[t._v("plugin.opgroup.")]),t._v("插件名称"),l("code",[t._v(".rule[")]),t._v("规则名称"),l("code",[t._v("]")]),t._v("=正则表达式")])]),t._v(" "),l("p",[t._v("支持具有不同键值，即单个插件有多个配置项，例如")]),t._v(" "),l("ol",[l("li",[t._v("plugin.opgroup.resttemplate.rule[/rule1]=/path1")]),t._v(" "),l("li",[t._v("plugin.opgroup.resttemplate.rule[/rule2]=/path2")]),t._v(" "),l("li",[t._v("plugin.opgroup.resttemplate.rule[/rule2]=/path3")])]),t._v(" "),l("p",[t._v("我们有以下插件支持操作名称分组.")]),t._v(" "),l("table",[l("thead",[l("tr",[l("th",{staticStyle:{"text-align":"center"}},[t._v("Plugin")]),t._v(" "),l("th",{staticStyle:{"text-align":"center"}},[t._v("Config Key")]),t._v(" "),l("th",{staticStyle:{"text-align":"left"}},[t._v("Example")])])]),t._v(" "),l("tbody",[l("tr",[l("td",{staticStyle:{"text-align":"center"}},[t._v("RestTemplate")]),t._v(" "),l("td",{staticStyle:{"text-align":"center"}},[t._v("plugin.opgroup.resttemplate.rule")]),t._v(" "),l("td",{staticStyle:{"text-align":"left"}},[t._v("plugin.opgroup.resttemplate.rule[/user/auth/{token}]="),l("code",[t._v("\\/user\\/auth\\/.*")])])])])])])}],!1,null,null,null);e.default=n.exports}}]);