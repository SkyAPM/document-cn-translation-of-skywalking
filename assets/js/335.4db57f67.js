(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{256:function(t,e,n){"use strict";n.r(e);var a=n(0),i=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("跟踪数据协议描述了SkyWalking代理/探针与后端之间的数据格式。")]),t._v(" "),t._m(1),t._v(" "),n("p",[t._v("跟踪数据协议是由"),n("a",{attrs:{href:"https://github.com/apache/skywalking-data-collect-protocol",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC format"),n("OutboundLink")],1),t._v("定义并提供的,\n并且是由 "),n("router-link",{attrs:{to:"./HTTP-API-Protocol.html"}},[t._v("HTTP 1.1")]),t._v("实现的。")],1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),n("p",[t._v("拥有服务ID和服务实例ID后，可以发送跟踪和指标。现在我们有")]),t._v(" "),t._m(5),t._v(" "),n("p",[t._v("对于跟踪格式，有一些注意事项")]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[n("p",[t._v("跨线程或进程 父信息的跨度称为依赖(Reference)。 依赖 携带 父级请求中的链路ID(trace id),\n追踪段ID(segment id), 跨度ID(span id), 服务名称(service name),服务实例名称(service instance name),\n端点名称(endpoint name) 和 客户端使用的目标地址(target address used at client side)(跨线程不需要) 。\n点击查看 "),n("router-link",{attrs:{to:"./Skywalking-Cross-Process-Propagation-Headers-Protocol-v3.html"}},[t._v("SkyWalking 跨进程传播的头部协议 V3")]),t._v(" to get more details.")],1)]),t._v(" "),t._m(8)])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"跟踪数据协议v3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#跟踪数据协议v3"}},[this._v("#")]),this._v(" 跟踪数据协议v3")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"总览"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总览"}},[this._v("#")]),this._v(" 总览")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"发送服务实例状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发送服务实例状态"}},[this._v("#")]),this._v(" 发送服务实例状态")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ol",[n("li",[n("p",[t._v("服务实例属性\n服务实例具有比名称更多的信息, 一旦探针想要发送它,使用 "),n("code",[t._v("ManagementService#reportInstanceProperties")]),t._v(" 提供字符串键/字符串值对列表作为参数的服务。\n至少发送目标实例的"),n("code",[t._v("language")]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("服务连通\n服务实例应该在后端保持存活。探针应当设置一个任务每分钟使用一次"),n("code",[t._v("ManagementService#keepAlive")]),t._v("服务。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"发送跟踪和指标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#发送跟踪和指标"}},[this._v("#")]),this._v(" 发送跟踪和指标")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[e("code",[this._v("TraceSegmentReportService#collect")]),this._v(" 用于 skywalking 的跟踪格式")]),this._v(" "),e("li",[e("code",[this._v("JVMMetricReportService#collect")]),this._v(" 用于 skywalking 的JVM格式")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("追踪段是SkyWalking中的一个概念，它应包括单个OS进程中每个请求的所有跨度，通常是基于语言的单个线程。")]),this._v(" "),e("li",[this._v("跨度有3个不同的类型。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("入口跨度(EntrySpan)\nEntrySpan代表服务提供商，也是服务器端的端点。作为APM系统，我们的目标是应用服务器。因此，几乎所有服务和MQ消费者都是EntrySpan。")])]),this._v(" "),e("li",[e("p",[this._v("本地跨度(LocalSpan)\nLocalSpan代表一种普通的Java方法，与MQ服务生产者/消费者或服务（例如HTTP服务）提供者/消费者都不与远程服务无关。")])]),this._v(" "),e("li",[e("p",[this._v("出口跨度(ExitSpan)\nExitSpan代表服务的客户或MQ生产者，在SkyWalking的早期被称为"),e("code",[this._v("LeafSpan")]),this._v("。\n例如：通过JDBC访问DB，读取Redis / Memcached被归类为ExitSpan。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[e("p",[e("code",[this._v("Span#skipAnalysis")]),this._v(" 如果此跨度不需要后端分析，则可以为TRUE。")])])}],!1,null,null,null);e.default=i.exports}}]);