(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{251:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p",[t._v("Trace Data Protocol协议，也就是探针与Collector间通讯协议")]),t._v(" "),t._m(1),t._v(" "),a("p",[t._v("此协议包含了Agent上行/下行数据的格式，可用于定制开发，或者探针的多语言扩展")]),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("v1.1")]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/incubator-skywalking-data-collect-protocol/tree/v1.1.1",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC proto files"),a("OutboundLink")],1)]),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),a("p",[t._v("HTTP GET")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),a("p",[t._v("应用注册服务，是将applicationCode，转换成数字ID的服务。\n此服务会在后续的传输过程中，有效降低网络带宽需求。")]),t._v(" "),t._m(15),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/incubator-skywalking-data-collect-protocol/blob/v1.1.1/ApplicationRegisterService.proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC service define"),a("OutboundLink")],1)]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),a("p",[t._v("应用实例发现服务存在三个子服务，分别是实例注册服务，实例心跳服务，实例注册重连服务。这三个服务负责获取和保持应用实例在线的功能。")]),t._v(" "),t._m(19),t._v(" "),a("p",[t._v("gRPC服务")]),t._v(" "),t._m(20),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/incubator-skywalking-data-collect-protocol/blob/v1.1.1/DiscoveryService.proto#L29",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC service define"),a("OutboundLink")],1)]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/incubator-skywalking-data-collect-protocol/blob/v1.1.1/DiscoveryService.proto#L32",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC service define"),a("OutboundLink")],1)]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),a("p",[t._v("服务名注册发现服务，是将应用内的服务名（operationName）替换为id的服务。")]),t._v(" "),t._m(26),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/incubator-skywalking-data-collect-protocol/blob/v1.1.1/DiscoveryService.proto#L70",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC service define"),a("OutboundLink")],1)]),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),t._m(29),t._v(" "),a("p",[t._v("地址注册发现服务，是将远程调用（RPC、MQ、DB...）地址的（addresses）替换为id的服务。")]),t._v(" "),t._m(30),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/incubator-skywalking-data-collect-protocol/blob/v1.1.1/NetworkAddressRegisterService.proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC service define"),a("OutboundLink")],1)]),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),a("p",[t._v("上报当前实例的JVM信息，每秒上报一次。")]),t._v(" "),t._m(34),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/incubator-skywalking-data-collect-protocol/blob/v1.1.1/JVMMetricsService.proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC service define"),a("OutboundLink")],1)]),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),a("p",[t._v("上报调用链信息")]),t._v(" "),t._m(37),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/apache/incubator-skywalking-data-collect-protocol/blob/v1.1.1/TraceSegmentService.proto",target:"_blank",rel:"noopener noreferrer"}},[t._v("gRPC service define"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("UniqueId为segment或者globalTraceId的数字表示。由3个long组成，1）applicationInstanceId，2）当前线程id，3）当前时间戳*10000 + seq(0-10000自循环)")]),t._v(" "),a("li",[t._v("Span的数据，请参考"),a("router-link",{attrs:{to:"./Plugin-Development-Guide-CN.html"}},[t._v("插件开发规范")])],1),t._v(" "),t._m(38),t._v(" "),t._m(39)]),t._v(" "),t._m(40),t._v(" "),a("p",[t._v("HTTP JSON服务, 属性名与gRPC对应，属性解释详见gRPC协议说明，统一采用HTTP POST方式")]),t._v(" "),t._m(41),t._v(" "),a("p",[t._v("地址: http://ip:port/instance/register(default: localhost:12800)")]),t._v(" "),a("p",[t._v("输入：")]),t._v(" "),t._m(42),a("p",[t._v("输出：")]),t._v(" "),t._m(43),t._m(44),t._v(" "),a("p",[t._v("地址: http://ip:port/instance/heartbeat(default: localhost:12800)")]),t._v(" "),a("p",[t._v("输入：")]),t._v(" "),t._m(45),a("p",[t._v("输出：无")]),t._v(" "),t._m(46),t._v(" "),a("p",[t._v("地址: http://ip:port/servicename/discovery(default: localhost:12800)")]),t._v(" "),a("p",[t._v("输入：")]),t._v(" "),t._m(47),a("p",[t._v("输出：")]),t._v(" "),t._m(48),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),a("p",[t._v("输入：")]),t._v(" "),t._m(53)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"trace-data-protocol-中文"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trace-data-protocol-中文"}},[this._v("#")]),this._v(" Trace Data Protocol 中文")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[this._v("#")]),this._v(" 概述")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议版本"}},[this._v("#")]),this._v(" 协议版本")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议类型"}},[this._v("#")]),this._v(" 协议类型")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("服务发现使用HTTP服务")]),this._v(" "),e("li",[this._v("注册和数据上行服务同时支持gRPC和HTTP JSON服务")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"grpc协议定义文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grpc协议定义文件"}},[this._v("#")]),this._v(" gRPC协议定义文件")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"collector服务发现协议"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#collector服务发现协议"}},[this._v("#")]),this._v(" Collector服务发现协议")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Collector服务发现协议是探针启动时，第一个调用的服务。")]),this._v(" 通过服务，查找可用的gRPC服务地址列表，并在由客户端选择其中任意一个作为服务端。\n此服务建议周期性调用，确保探针本地的服务端口列表是准确有效的。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议类型-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议类型-2"}},[this._v("#")]),this._v(" 协议类型")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议内容"}},[this._v("#")]),this._v(" 协议内容")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("请求\nGET操作：http://collectorIp:port/agent/gRPC 。 其中"),e("code",[this._v("/agent/gRPC")]),this._v("是默认值，如需修改，需要参考collector相关配置。")])]),this._v(" "),e("li",[e("p",[this._v("返回\nJSON数组，数组的每个元素，为一个有效的gRPC服务地址。")])])])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ip address1:port1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ip address2:port2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ip address3:port3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"应用注册服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用注册服务"}},[this._v("#")]),this._v(" 应用注册服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介-2"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议内容-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议内容-2"}},[this._v("#")]),this._v(" 协议内容")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("applicationCode为客户端设置的应用名.")]),this._v(" "),e("li",[this._v("applicationCode对应的返回id,在后续协议中，被称为applicationId。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"应用实例发现服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#应用实例发现服务"}},[this._v("#")]),this._v(" 应用实例发现服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介-3"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议类型-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议类型-3"}},[this._v("#")]),this._v(" 协议类型")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"实例注册服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例注册服务"}},[this._v("#")]),this._v(" 实例注册服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("agentUUID 由探针生成，需保持唯一性，推荐使用UUID算法。并在应用重启前保持不变")]),this._v(" "),e("li",[this._v("applicationId 由"),e("strong",[this._v("应用注册服务")]),this._v("获取。")]),this._v(" "),e("li",[this._v("服务端返回应用实例id，applicationInstanceId 。后续上报服务使用实例id标识。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"实例心跳服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例心跳服务"}},[this._v("#")]),this._v(" 实例心跳服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("心跳服务每分钟上报一次。")]),this._v(" "),e("li",[this._v("如果一分钟内有segment数据上报，则可不必上报心跳。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"服务名注册发现服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务名注册发现服务"}},[this._v("#")]),this._v(" 服务名注册发现服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介-4"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议内容-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议内容-3"}},[this._v("#")]),this._v(" 协议内容")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("可选服务，可有效降低网络消耗，推荐实现。注意，由于部分应用存在URI中夹带参数的情况，请注意限制探针内的缓存容量，防止内存溢出。")]),this._v(" "),e("li",[this._v("ServiceNameElement中，applicationId为当前applicationCode对应的id。serviceName一般为对应span的operationName")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"地址注册发现服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#地址注册发现服务"}},[this._v("#")]),this._v(" 地址注册发现服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介-5"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议内容-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议内容-4"}},[this._v("#")]),this._v(" 协议内容")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("可选服务，可有效降低网络消耗，推荐实现。")]),this._v(" "),e("li",[this._v("NetworkAddresses中，addresses为被调方的地址（IP/HOST:PORT）多个地址使用逗号分隔")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"jvm指标上报服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jvm指标上报服务"}},[this._v("#")]),this._v(" JVM指标上报服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介-6"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议内容-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议内容-5"}},[this._v("#")]),this._v(" 协议内容")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"tracesegment上报服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tracesegment上报服务"}},[this._v("#")]),this._v(" TraceSegment上报服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"简介-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介-7"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议内容-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议内容-6"}},[this._v("#")]),this._v(" 协议内容")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("li",[t._v("以下id和名称根据注册返回结果，优先上报id，无法获取id时，再上传name。参考之前的应用和服务注册章节。\n"),a("ul",[a("li",[t._v("operationNameId/operationName")]),t._v(" "),a("li",[t._v("networkAddress/networkAddressId")]),t._v(" "),a("li",[t._v("entryServiceName/entryServiceId")]),t._v(" "),a("li",[t._v("parentServiceName/parentServiceId")]),t._v(" "),a("li",[t._v("peerId/peer")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("li",[this._v("componentId为默认支持的插件id，非官方支持，需传输名称或修改服务端源代码。"),e("a",{attrs:{href:"../../apm-protocol/apm-network/src/main/java/org/apache/skywalking/apm/network/trace/component/ComponentsDefine.java"}},[this._v("官方组件列表")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"协议类型-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#协议类型-4"}},[this._v("#")]),this._v(" 协议类型")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"实例注册服务-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例注册服务-2"}},[this._v("#")]),this._v(" 实例注册服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('{\n    ai: x, #applicationId\n    au: "", #agentUUID\n    rt: x, #registerTime\n    oi: "", #osinfo\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("{\n    ai: x, #applicationId\n    ii: x, #applicationInstanceId\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"实例心跳服务-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实例心跳服务-2"}},[this._v("#")]),this._v(" 实例心跳服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('{\n    "ii": x, #applicationInstanceId\n    "ht": x #heartbeatTime, java timestamp format\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"服务名注册发现服务-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务名注册发现服务-2"}},[this._v("#")]),this._v(" 服务名注册发现服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('{\n    ai: x, #applicationId\n    sn: "", #serviceName\n    st: x, #srcSpanType\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('{\n    si: x, #osinfo\n    el: { #element\n        ai: x, #applicationId\n        sn: "", #serviceName\n        st: x, #srcSpanType\n    }\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"jvm指标上报服务-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jvm指标上报服务-2"}},[this._v("#")]),this._v(" JVM指标上报服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"暂无支持需求，java和c-的探针都采用grpc的方式上报"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#暂无支持需求，java和c-的探针都采用grpc的方式上报"}},[this._v("#")]),this._v(" 暂无支持需求，java和c#的探针都采用gRPC的方式上报")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"tracesegment上报服务-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tracesegment上报服务-2"}},[this._v("#")]),this._v(" TraceSegment上报服务")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"一次可以发送多个segment，采用json数组的形式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一次可以发送多个segment，采用json数组的形式"}},[this._v("#")]),this._v(" 一次可以发送多个Segment，采用JSON数组的形式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('[\n  {\n    "gt": [[230150, 185809, 24040000]], //globalTraceIds 链路编码，与调用方相同\n    "sg": { //TraceSegmentObject \n      "ts": [137150, 185809, 48780000], //traceSegmentId，新产生\n      "ai": 2, //applicationId\n      "ii": 3, //applicationInstanceId\n      "ss": [ //SpanObject\n        {\n          "si": 0, //spanId\n          "tv": 0, //SpanType\n          "lv": 2, //SpanLayer\n          "ps": -1, //parentSpanId\n          "st": 1501858094726, //startTime\n          "et": 1501858096804, //endTime\n          "ci": 3, //componentId\n          "cn": "", //component\n          "oi": 0, //operationNameId\n          "on": "org.skywaking.apm.testcase.dubbo.services.GreetService.doBusiness()", //operationName\n          "pi": 0, //peerId\n          "pn": "", //peer\n          "ie": false, //isError\n          "rs": [ //TraceSegmentReference\n            {\n              "pts": [230150, 185809, 24040000], //parentTraceSegmentId, 上级的segment_id 一个应用中的一个实例在链路中产生的编号\n              "pii": 2, //parentApplicationInstanceId, 上级的实例编号\n              "psp": 1, //parentSpanId, 上级的埋点编号span_id\n              "psi": 0, //parentServiceId, 上级的服务编号(org.skywaking.apm.testcase.dubbo.services.GreetService.doBusiness()注册后的ID)\n              "psn": "/dubbox-case/case/dubbox-rest", //parentServiceName, 上级的服务名\n              "ni": 0,  //networkAddressId, 上级调用时使用的地址注册后的ID\n              "nn": "172.25.0.4:20880", //networkAddress, 上级的地址\n              "eii": 2, //entryApplicationInstanceId, 入口的实例编号\n              "esi": 0, //entryServiceId, 入口的服务编号\n              "esn": "/dubbox-case/case/dubbox-rest", //entryServiceName, 入口的服务名词\n              "rv": 0 //RefTypeValue, 调用方式（CrossProcess，CrossThread）\n            }\n          ],\n          "to": [ //KeyWithStringValue\n            {\n              "k": "url", //key\n              "v": "rest://172.25.0.4:20880/org.skywaking.apm.testcase.dubbo.services.GreetService.doBusiness()" //value\n            },\n            {\n              "k": "http.method",\n              "v": "GET"\n            }\n          ],\n          "lo": [{\n                  "ti": 1501858094726,\n                  "ld": [{ \n                          "k": "NullPointException",\n                          "v": "Error Stack"\n                      }]\n             }]\n        },\n        {\n          "si": 1,\n          "tv": 1,\n          "lv": 1,\n          "ps": 0,\n          "st": 1501858094726,\n          "et": 1501858095804,\n          "ci": 9,\n          "cn": "",\n          "oi": 0,\n          "on": "mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]",\n          "pi": 0,\n          "pn": "localhost:27017",\n          "ie": false,\n          "to": [],\n          "lo": []\n        }\n      ]\n    }\n  }\n]\n')])])])}],!1,null,null,null);e.default=r.exports}}]);