(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{245:function(e,a,v){"use strict";v.r(a);var _=v(0),t=Object(_.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("div",{staticClass:"content"},[v("h1",{attrs:{id:"skywalking-cross-process-propagation-headers-protocol"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#skywalking-cross-process-propagation-headers-protocol"}},[e._v("#")]),e._v(" Skywalking Cross Process Propagation Headers Protocol")]),e._v(" "),v("ul",[v("li",[e._v("Version 1.0")])]),e._v(" "),v("p",[e._v("Skywalking是一个偏向APM的分布式追踪系统，所以，为了提供服务端处理性能。头信息会比其他的追踪系统要更复杂一些。\n你会发现，这个头信息，更像一个商业APM系统，并且，一些商业APM系统的头信息，比我们的要复杂的多。")]),e._v(" "),v("h1",{attrs:{id:"header-item"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#header-item"}},[e._v("#")]),e._v(" Header Item")]),e._v(" "),v("ul",[v("li",[e._v("Header Name: "),v("code",[e._v("sw3")])]),e._v(" "),v("li",[e._v("Header Value: 使用"),v("code",[e._v("|")]),e._v("分隔，包含以下内容")])]),e._v(" "),v("p",[v("em",[e._v("消息头使用sw3，因为此协议始于SkyWalking 3.x版本。")])]),e._v(" "),v("h2",{attrs:{id:"values"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#values"}},[e._v("#")]),e._v(" Values")]),e._v(" "),v("ul",[v("li",[e._v("Trace Segment Id")])]),e._v(" "),v("p",[e._v("Trace segment，即分布式调用链片段。这个ID为此调用链片段全局唯一ID。此ID由一次分布式调用链的一个线程执行过程独享（在Java模型中）。ID由三个Long型组成，如： "),v("code",[e._v('"1.2343.234234234')])]),e._v(" "),v("ol",[v("li",[e._v("第一部分代表应用的实例ID("),v("code",[e._v("application instance id")]),e._v(")，此ID通过注册接口由Collector分配。一般取值范围为整形，利于protobuf传输。")]),e._v(" "),v("li",[e._v("第二部分为线程号，Java模型中，一般也是整形。")]),e._v(" "),v("li",[e._v("第三部分又由两部分组成\n"),v("ol",[v("li",[e._v("时间戳，单位毫秒")]),e._v(" "),v("li",[e._v("线程内的自增序列。0到9999之间。")])])])]),e._v(" "),v("p",[e._v("如果你使用其他语言实现探针，你只需要保证你的ID由三个Long型构成，并全局唯一，不必完全遵守Java的ID生成规则。")]),e._v(" "),v("ul",[v("li",[e._v("Span Id")])]),e._v(" "),v("p",[e._v("一个整数，在trace segment内唯一，从0开始自增。")]),e._v(" "),v("ul",[v("li",[e._v("Parent Application Instance")])]),e._v(" "),v("p",[e._v("父级应用节点的应用实例ID。如：在一个RPC调用中，HEAD中是客户端的应用实例ID。")]),e._v(" "),v("ul",[v("li",[e._v("Entry Application Instance")])]),e._v(" "),v("p",[e._v("入口应用节点的应用实例ID。如：在一个分布式链路"),v("code",[e._v("A->B->C")]),e._v("中，此字段为"),v("code",[e._v("A")]),e._v("应用的实例ID。")]),e._v(" "),v("ul",[v("li",[e._v("Peer Host")])]),e._v(" "),v("p",[e._v("服务端的Peer Host或Peer Id。如：客户端使用"),v("code",[e._v("182.14.39.1:9080")]),e._v("服务端，则这个就是对应的Peer Host。")]),e._v(" "),v("p",[v("em",[e._v("此值可以通过Collector服务获得对应的ID。如果非ID，则使用"),v("code",[e._v("#")]),e._v("开头，如果使用ID，则为整数类型。")])]),e._v(" "),v("ul",[v("li",[e._v("Entry Span Operation Name of First Trace Segment")])]),e._v(" "),v("p",[e._v("调用链入口节点的应用实例下,入口Span的operation name或id。")]),e._v(" "),v("p",[v("em",[e._v("此值可以通过Collector服务获得对应的ID。如果非ID，则使用"),v("code",[e._v("#")]),e._v("开头，如果使用ID，则为整数类型。")])]),e._v(" "),v("ul",[v("li",[e._v("Entry Span Operation Name of Parent Trace Segment")])]),e._v(" "),v("p",[e._v("调用链父级节点的应用实例下,入口Span的operation name或id。")]),e._v(" "),v("p",[v("em",[e._v("此值可以通过Collector服务获得对应的ID。如果非ID，则使用"),v("code",[e._v("#")]),e._v("开头，如果使用ID，则为整数类型。")])]),e._v(" "),v("ul",[v("li",[e._v("Distributed Trace Id")])]),e._v(" "),v("p",[e._v("分布式链路ID一般是整个调用链的全局唯一ID。如果针对批量消费情况，这个ID是批量中，第一个生产者的trace ID。此ID生成规则和"),v("code",[e._v("Trace Segment Id")]),e._v("一致，由三个Long型数字构成。")]),e._v(" "),v("h3",{attrs:{id:"sample-value"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#sample-value"}},[e._v("#")]),e._v(" Sample value")]),e._v(" "),v("p",[e._v("value值示例：")]),e._v(" "),v("ol",[v("li",[v("code",[e._v("1.2343.234234234|1|1|1|#127.0.0.1:8080|#/portal/|#/testEntrySpan|1.2343.234234234")])]),e._v(" "),v("li",[v("code",[e._v("1.2343.234234234|1|1|1|#127.0.0.1:8080|#/portal/|1038|1.2343.234234234")])])])])}],!1,null,null,null);a.default=t.exports}}]);